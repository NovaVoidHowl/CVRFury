// { "version": "0.1.2" , "canInstall": true , "optional": true , "defineSymbolSuffix": "_MI_AOU", dependencies: []}
// #if UNITY_EDITOR && CVR_CCK_EXISTS

using Math = System.Math;
using System.Collections;
using System.Collections.Generic;
using UnityEditor;
using UnityEditor.UIElements;
using UnityEngine;
using UnityEngine.UIElements;
using UnityEngine.SceneManagement;
using uk.novavoidhowl.dev.cvrfury.runtime;
using ABI.CCK.Scripts.Editor;
using ABI.CCK.Components;
using Constants = uk.novavoidhowl.dev.cvrfury.packagecore.Constants;
using static uk.novavoidhowl.dev.cvrfury.packagecore.CoreUtils;

namespace uk.novavoidhowl.dev.cvrfury.deployable
{
  public class uploadObjectStateSetterProcessor : IModuleProcessor
  {
    public void ProcessModule(CVRFuryModule module)
    {
        // Implementation for uploadObjectStateSetter
        // console print to say this function is being called
        CoreLog("uploadObjectStateSetterProcessor.ProcessModule() called");

        // log the module's moduleType to the console
        CoreLog("module.ModuleType: " + module.ModuleType);

        // for each of the objectStatePairs in the module
        foreach (objectStatePair pair in ((uploadObjectStateSetter)module).objectStatePairs)
        {
          // check if the GameObject exists
          if (pair.objectToSetStateOn != null)
          {

            // use objectState to set the GameObject's state, (its an enum with values: "disabled", "enabled")
            switch (pair.stateToSet)
            {
              case objectStatePair.objectState.disabled:
                pair.objectToSetStateOn.SetActive(false);
                break;
              case objectStatePair.objectState.enabled:
                pair.objectToSetStateOn.SetActive(true);
                break;
            }
          }
          else
          {
            // if it doesn't, log an error to the console
            Debug.LogError("GameObject " + pair.objectToSetStateOn.name + " does not exist");
          }
        }

    }
  }
}
// #endif
