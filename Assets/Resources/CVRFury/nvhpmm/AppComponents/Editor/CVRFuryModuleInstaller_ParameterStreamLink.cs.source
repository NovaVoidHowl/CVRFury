// { "version": "0.0.5" , "canInstall": true , "optional": true , "defineSymbolSuffix": "_MI_PARAM_STREAM", dependencies: []}
// #if UNITY_EDITOR && CVR_CCK_EXISTS

using System.Collections;
using System.Collections.Generic;
using System.Linq;
using UnityEditor;
using UnityEngine;
using UnityEngine.SceneManagement;
using uk.novavoidhowl.dev.cvrfury.runtime;
using ABI.CCK.Scripts.Editor;
using ABI.CCK.Scripts;
using ABI.CCK.Components;
using Constants = uk.novavoidhowl.dev.cvrfury.packagecore.Constants;
using static uk.novavoidhowl.dev.cvrfury.packagecore.CoreUtils;
using static uk.novavoidhowl.dev.cvrfury.supporting_classes.runtime.General;

// temp using for testing
using System.Text;

/// <summary>
/// parameterStreamLink Module
/// this is handles adding links from the parameter stream to animators etc.
/// </summary>

namespace uk.novavoidhowl.dev.cvrfury.deployable
{
  public class parameterStreamLinkModuleProcessor : IModuleProcessor
  {
    public void ProcessModule(CVRFuryModule module, GameObject targetAvatar, int DSUNumber, GameObject DSUObject)
    {
      // Implementation for parameterStreamLinkModuleProcessor
      // console print to say this function is being called
      CoreLog("parameterStreamLinkModuleProcessor.ProcessModule() called");

      // log the module's moduleType to the console
      CoreLog("module.ModuleType: " + module.ModuleType);

      // cast the module to parameterStreamLink
      parameterStreamLink parameterStreamLinkModule = (parameterStreamLink)module;

      // access the CVRAvatar component on the targetAvatar
      CVRAvatar avatar = targetAvatar.GetComponent<CVRAvatar>();

      // check if the avatar exists
      if (avatar != null)
      {
        // we have the avatar, and it is valid

        // check if the avatar has the CVRParameterStream component on it, and if not add it
        if (avatar.GetComponent<CVRParameterStream>() == null)
        {
          // add the CVRParameterStream component to the avatar
          avatar.gameObject.AddComponent<CVRParameterStream>();
        }

        // get the CVRParameterStream component on the avatar
        CVRParameterStream parameterStream = avatar.GetComponent<CVRParameterStream>();

        // check if the 'entries' list in the parameterStream is null
        if (parameterStream.entries == null)
        {
          // the 'entries' list is null, so create a new list
          parameterStream.entries = new List<CVRParameterStreamEntry>();
        }

        // loop round the 'entries' in the module
        foreach (var entry in parameterStreamLinkModule.entries)
        {
          // check if the entry not null, no need to process if it is
          if (entry != null)
          {
            // check if there are any entries in parameterStream.Entries, if not there' nothing to check
            // for conflicts with and we can just add the entry
            if (parameterStream.entries.Count > 0)
            {
              // there are entries in parameterStream.Entries, so we need to check for conflicts
              // with the entry we are trying to add

              // first convert the CVRFuryParameterStreamEntry object to a CVRParameterStreamEntry object
              CVRParameterStreamEntry newEntry = new CVRParameterStreamEntry();

              // Manually copy the properties from the CVRFuryParameterStreamEntry object
              newEntry.type = (CVRParameterStreamEntry.Type)(int)entry.type;
              newEntry.targetType = (CVRParameterStreamEntry.TargetType)(int)entry.targetType;
              newEntry.applicationType = (CVRParameterStreamEntry.ApplicationType)(int)entry.applicationType;
              newEntry.staticValue = entry.staticValue;
              newEntry.target = entry.target;
              newEntry.parameterName = entry.parameterName;

              // 'newEntry' is now the same type as the values in parameterStream.Entries list
              // so now need to check for conflicts

              // check if newEntry is already in the parameterStream.Entries list
              if (parameterStream.entries.Contains(newEntry))
              {
                // newEntry is already in the list, so don't add it again
                // log a to console to say that the entry is already in the list
                CoreLog("Entry already in the parameter stream list: " + newEntry.parameterName);
              }
              else
              {
                // newEntry is not in the list, so we can just add it
                parameterStream.entries.Add(newEntry);
              }

            }
            else
            {
              // there are no entries in parameterStream.Entries, so we can just add the entry
              
              // note that entry is a CVRFuryParameterStreamEntry object, and we need to convert it
              // to a CVRParameterStreamEntry object
              
              // Create a new CVRParameterStreamEntry object
              CVRParameterStreamEntry newEntry = new CVRParameterStreamEntry();

              // Manually copy the properties from the CVRFuryParameterStreamEntry object
              newEntry.type = (CVRParameterStreamEntry.Type)(int)entry.type;
              newEntry.targetType = (CVRParameterStreamEntry.TargetType)(int)entry.targetType;
              newEntry.applicationType = (CVRParameterStreamEntry.ApplicationType)(int)entry.applicationType;
              newEntry.staticValue = entry.staticValue;
              newEntry.target = entry.target;
              newEntry.parameterName = entry.parameterName;

              // Add the new entry to the parameterStream.Entries list
              parameterStream.entries.Add(newEntry);
                
            }

          }

        }
      }
    }
  }
}
// #endif
