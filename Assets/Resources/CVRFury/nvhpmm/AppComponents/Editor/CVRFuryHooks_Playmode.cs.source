// { "version": "0.0.1" , "canInstall": true , "optional": false , "defineSymbolSuffix": "_HOOK_PLAY", dependencies: ["NVH_CVRFURY_EXISTS_MI_CORE"]}
// #if UNITY_EDITOR && CVR_CCK_EXISTS

using System;
using System.Threading.Tasks;
using UnityEditor;
using UnityEngine;
using uk.novavoidhowl.dev.cvrfury.runtime;
using ABI.CCK.Components;
using Constants = uk.novavoidhowl.dev.cvrfury.packagecore.Constants;
using static uk.novavoidhowl.dev.cvrfury.packagecore.CoreUtils;
using uk.novavoidhowl.dev.cvrfury.packagecore;

namespace uk.novavoidhowl.dev.cvrfury.deployable
{
   public class ModuleInstallOnPlay
  {
    [RuntimeInitializeOnLoadMethod]
    static void RunOnStart()
    {
      if (ModuleInstallerState.IsModuleInstallOnBuildCalled)
      {
        // console print to show that the ModuleInstallOnPlay has been skipped
        CoreLog("ModuleInstallOnPlay skipped as in Build Mode");
        // play only gets called once so reset the ModuleInstallerState.IsModuleInstallOnBuildCalled to false
        ModuleInstallerState.IsModuleInstallOnBuildCalled = false;
      }
      else
      {
        // Find all active game objects with a CVRAvatar component
        var avatars = GameObject.FindObjectsOfType<CVRAvatar>();

        foreach (var avatar in avatars)
        {
          // Start the InstallCVRFuryModules method as a separate task
          Task.Run(() =>
          {
            UnityEditor.EditorApplication.delayCall += () =>
            {
              CVRFuryModuleInstaller.InstallCVRFuryModulesAsync(avatar.gameObject, 0);
            };
          });
        }
      }
    }
  }
}
// #endif
